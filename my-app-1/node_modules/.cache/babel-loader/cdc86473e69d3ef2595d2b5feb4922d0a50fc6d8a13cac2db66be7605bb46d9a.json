{"ast":null,"code":"var _jsxFileName = \"/home/deyan/DEV/COURSERA_COURSES/Capstone-original/capstonefrontend/my-app-1/src/components/BookingPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BookingPage = _ref => {\n  _s();\n  let {\n    dispatch,\n    handleSubmit,\n    submitting\n  } = _ref;\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"17:00\");\n  const [guests, setGuests] = useState(1);\n  const [occasion, setOccasion] = useState(\"Birthday\");\n  const navigate = useNavigate();\n  const handleFormSubmit = async e => {\n    e.preventDefault();\n    if (submitting) {\n      return; // Prevent multiple form submissions while submitting\n    }\n\n    try {\n      const availableTimes = await window.fetchAPI(date); // Access fetchAPI from the global window object\n      // Perform submission logic or API call\n      console.log(\"Form submitted:\", {\n        date,\n        time,\n        guests,\n        occasion\n      });\n\n      // Update available times based on the selected date\n      dispatch({\n        type: \"UPDATE_TIMES\",\n        date\n      });\n      const response = await window.submitAPI({\n        date,\n        time,\n        guests,\n        occasion\n      }); // Access submitAPI from the global window object\n\n      if (response === true) {\n        navigate(\"/booking-confirmed\"); // Navigate to booking confirmation page\n      }\n    } catch (error) {\n      // Handle API call or submission error\n      console.log(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    style: {\n      display: \"grid\",\n      maxWidth: \"200px\",\n      gap: \"20px\"\n    },\n    onSubmit: handleFormSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(BookingPage, \"8n0hMC+SldERrWPbVjbL2q6l7Fo=\", false, function () {\n  return [useNavigate];\n});\n_c = BookingPage;\nexport default BookingPage;\nvar _c;\n$RefreshReg$(_c, \"BookingPage\");","map":{"version":3,"names":["React","useState","useNavigate","jsxDEV","_jsxDEV","BookingPage","_ref","_s","dispatch","handleSubmit","submitting","date","setDate","time","setTime","guests","setGuests","occasion","setOccasion","navigate","handleFormSubmit","e","preventDefault","availableTimes","window","fetchAPI","console","log","type","response","submitAPI","error","style","display","maxWidth","gap","onSubmit","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/deyan/DEV/COURSERA_COURSES/Capstone-original/capstonefrontend/my-app-1/src/components/BookingPage.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nconst BookingPage = ({ dispatch, handleSubmit, submitting }) => {\n  const [date, setDate] = useState(\"\");\n  const [time, setTime] = useState(\"17:00\");\n  const [guests, setGuests] = useState(1);\n  const [occasion, setOccasion] = useState(\"Birthday\");\n\n  const navigate = useNavigate();\n\n  const handleFormSubmit = async (e) => {\n    e.preventDefault();\n\n    if (submitting) {\n      return; // Prevent multiple form submissions while submitting\n    }\n\n    try {\n      const availableTimes = await window.fetchAPI(date); // Access fetchAPI from the global window object\n      // Perform submission logic or API call\n      console.log(\"Form submitted:\", { date, time, guests, occasion });\n\n      // Update available times based on the selected date\n      dispatch({ type: \"UPDATE_TIMES\", date });\n\n      const response = await window.submitAPI({ date, time, guests, occasion }); // Access submitAPI from the global window object\n\n      if (response === true) {\n        navigate(\"/booking-confirmed\"); // Navigate to booking confirmation page\n      }\n    } catch (error) {\n      // Handle API call or submission error\n      console.log(\"Error:\", error);\n    }\n  };\n\n  return (\n    <form\n      style={{ display: \"grid\", maxWidth: \"200px\", gap: \"20px\" }}\n      onSubmit={handleFormSubmit}\n    >\n      {/* Form inputs and submit button */}\n    </form>\n  );\n};\n\nexport default BookingPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE/C,MAAMC,WAAW,GAAGC,IAAA,IAA4C;EAAAC,EAAA;EAAA,IAA3C;IAAEC,QAAQ;IAAEC,YAAY;IAAEC;EAAW,CAAC,GAAAJ,IAAA;EACzD,MAAM,CAACK,IAAI,EAAEC,OAAO,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACpC,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,OAAO,CAAC;EACzC,MAAM,CAACc,MAAM,EAAEC,SAAS,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACvC,MAAM,CAACgB,QAAQ,EAAEC,WAAW,CAAC,GAAGjB,QAAQ,CAAC,UAAU,CAAC;EAEpD,MAAMkB,QAAQ,GAAGjB,WAAW,CAAC,CAAC;EAE9B,MAAMkB,gBAAgB,GAAG,MAAOC,CAAC,IAAK;IACpCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,IAAIZ,UAAU,EAAE;MACd,OAAO,CAAC;IACV;;IAEA,IAAI;MACF,MAAMa,cAAc,GAAG,MAAMC,MAAM,CAACC,QAAQ,CAACd,IAAI,CAAC,CAAC,CAAC;MACpD;MACAe,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE;QAAEhB,IAAI;QAAEE,IAAI;QAAEE,MAAM;QAAEE;MAAS,CAAC,CAAC;;MAEhE;MACAT,QAAQ,CAAC;QAAEoB,IAAI,EAAE,cAAc;QAAEjB;MAAK,CAAC,CAAC;MAExC,MAAMkB,QAAQ,GAAG,MAAML,MAAM,CAACM,SAAS,CAAC;QAAEnB,IAAI;QAAEE,IAAI;QAAEE,MAAM;QAAEE;MAAS,CAAC,CAAC,CAAC,CAAC;;MAE3E,IAAIY,QAAQ,KAAK,IAAI,EAAE;QACrBV,QAAQ,CAAC,oBAAoB,CAAC,CAAC,CAAC;MAClC;IACF,CAAC,CAAC,OAAOY,KAAK,EAAE;MACd;MACAL,OAAO,CAACC,GAAG,CAAC,QAAQ,EAAEI,KAAK,CAAC;IAC9B;EACF,CAAC;EAED,oBACE3B,OAAA;IACE4B,KAAK,EAAE;MAAEC,OAAO,EAAE,MAAM;MAAEC,QAAQ,EAAE,OAAO;MAAEC,GAAG,EAAE;IAAO,CAAE;IAC3DC,QAAQ,EAAEhB;EAAiB;IAAAiB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAGvB,CAAC;AAEX,CAAC;AAACjC,EAAA,CA1CIF,WAAW;EAAA,QAMEH,WAAW;AAAA;AAAAuC,EAAA,GANxBpC,WAAW;AA4CjB,eAAeA,WAAW;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}